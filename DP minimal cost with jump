---------------Tabulation code with TC - O(n) +O(k)   and SC -> O(n)------------ we can say this problem is like frog jump with k steps-----------
we can't do space optimization because this is K steps---- if we do then we can reach upto O(k) space complexity but what if k=n. Then still space complexity will be O(n)-----
public static int minimizeCost(int n, int k, int []height)
   {
        int[] dp = new int[n+1];
        dp[0]=0;
        for(int i=1;i<n;i++){
            int minsteps = Integer.MAX_VALUE;
            for(int j=1;j<=k;j++){
                if(i-j >=0){
                    int jump = dp[i-j] + Math.abs(height[i] - height[i-j]);
                    minsteps = Math.min(minsteps, jump);
                }
            }
            dp[i] = minsteps;
        }
        return dp[n-1];
    }
